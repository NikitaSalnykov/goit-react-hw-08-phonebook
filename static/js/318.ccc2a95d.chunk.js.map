{"version":3,"file":"static/js/318.ccc2a95d.chunk.js","mappings":"yQAEaA,EAAa,CACxBC,MAAO,SAGIC,EAAY,CACvBC,QAAS,OACTC,cAAe,UAGJC,EAAe,CAC1BC,SAAU,QACVC,MAAO,MACPC,SAAU,WACVC,QAAS,OAGEC,EAAaC,EAAAA,GAAAA,IAAH,oK,gMCFVC,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,KAAf,IAC1BC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRP,GAAUK,EAASG,EAAAA,EAAAA,KACpB,GAAE,CAACR,EAAQK,IAUZ,OACE,iCACE,SAAC,KAAD,CACEI,cAAe,CAAEC,MAAO,GAAIC,SAAU,IACtCC,SAAU,SAAAC,GACR,IAAMC,EAAS,CAAC,EAUhB,OATKD,EAAOH,MAGT,2CAA2CK,KAAKF,EAAOH,SAExDI,EAAOJ,OACL,gBAAKM,MAAO1B,EAAAA,GAAZ,SAA0B,2BAL5BwB,EAAOJ,OAAQ,gBAAKM,MAAO1B,EAAAA,GAAZ,SAA0B,aAQpCwB,CACR,EACDG,SAAU,SAACJ,EAAD,GAAgC,IAzB5BK,EAyBOC,EAAoB,EAApBA,cAzBPD,EA0BAL,EAzBlBf,GACEsB,EAAAA,EAAAA,IAAe,CACbV,MAAOQ,EAAIR,MACXC,SAAUO,EAAIP,YAuBZQ,GAAc,EACf,EAlBH,SAoBG,gBAAGE,EAAH,EAAGA,aAAH,OACC,UAAC,KAAD,CAAML,MAAO7B,EAAAA,GAAb,WACE,4BACE,SAAC,KAAD,CACE6B,MAAO/B,EAAAA,GACPqC,KAAK,QACLC,GAAG,QACHC,KAAK,QACLC,GAAIC,EAAAA,EACJC,QAAQ,WACRC,MAAM,QACNC,UAAQ,KAEV,SAAC,KAAD,CAAcL,KAAK,QAAQM,UAAU,YAEvC,iBAAKd,MAAO,CAAEe,UAAW,QAAzB,WACE,SAAC,KAAD,CACEf,MAAO/B,EAAAA,GACPqC,KAAK,WACLC,GAAG,WACHC,KAAK,WACLC,GAAIC,EAAAA,EACJC,QAAQ,WACRC,MAAM,WACNC,UAAQ,KAEV,SAAC,KAAD,CAAcL,KAAK,WAAWM,UAAU,YAE1C,SAACE,EAAA,EAAD,CACEhB,MAAO,CAAEe,UAAW,QACpBJ,QAAQ,YACRL,KAAK,SACLW,SAAUZ,EAJZ,SAKC,aAjCJ,KAuCH,SAAC,KAAD,WACE,SAAC,KAAD,CAAMa,GAAI1B,EAAAA,EAAAA,SAAV,SAA2B,gBAIlC,E,SCjGY2B,E,QAAevC,GAAAA,IAAH,0ICazB,EAXc,WACZ,OACE,SAAC,IAAD,WACE,UAACuC,EAAD,YACE,wBAAI,WACJ,SAACtC,EAAD,QAIP,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/Login/Login.styled.js","pages/Login/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const inputStyle = {\n  width: '250px',\n};\n\nexport const formStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n};\n\nexport const notification = {\n  fontSize: 'small',\n  color: 'red',\n  position: 'absolute',\n  padding: '2px',\n};\n\nexport const SwitchForm = styled.div`\n  margin-top: 10px;\n  color: #034c9c;\n  font-size: small;\n  transition: 0.3s ease;\n  opacity: 0.8;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginUserThunk } from 'store/auth/thunk';\nimport { Link, useNavigate } from 'react-router-dom';\n\nimport TextField from '@mui/material/TextField';\nimport { Button } from '@mui/material';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { routes } from 'routes';\nimport {\n  SwitchForm,\n  formStyle,\n  inputStyle,\n  notification,\n} from './LoginForm.styled';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const isAuth = useSelector(state => state.auth.token);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    isAuth && navigate(routes.HOME);\n  }, [isAuth, navigate]);\n\n  const handleLogIn = obj => {\n    dispatch(\n      loginUserThunk({\n        email: obj.email,\n        password: obj.password,\n      })\n    );\n  };\n  return (\n    <>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        validate={values => {\n          const errors = {};\n          if (!values.email) {\n            errors.email = <div style={notification}>Required</div>;\n          } else if (\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n          ) {\n            errors.email = (\n              <div style={notification}>Invalid email address</div>\n            );\n          }\n          return errors;\n        }}\n        onSubmit={(values, { setSubmitting }) => {\n          handleLogIn(values);\n          setSubmitting(false);\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form style={formStyle}>\n            <div>\n              <Field\n                style={inputStyle}\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                as={TextField}\n                variant=\"outlined\"\n                label=\"Email\"\n                required\n              />\n              <ErrorMessage name=\"email\" component=\"div\" />\n            </div>\n            <div style={{ marginTop: '20px' }}>\n              <Field\n                style={inputStyle}\n                type=\"password\"\n                id=\"password\"\n                name=\"password\"\n                as={TextField}\n                variant=\"outlined\"\n                label=\"Password\"\n                required\n              />\n              <ErrorMessage name=\"password\" component=\"div\" />\n            </div>\n            <Button\n              style={{ marginTop: '30px' }}\n              variant=\"contained\"\n              type=\"submit\"\n              disabled={isSubmitting}\n            >\n              Submit\n            </Button>\n          </Form>\n        )}\n      </Formik>\n      <SwitchForm>\n        <Link to={routes.REGISTER}>Sign Up</Link>\n      </SwitchForm>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const LoginWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 30px;\n`;\n","import { DivContainer } from 'components/App/App.styled';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\nimport { LoginWrapper } from './Login.styled';\n\nconst Login = () => {\n  return (\n    <DivContainer>\n      <LoginWrapper>\n        <h1>Login</h1>\n        <LoginForm />\n      </LoginWrapper>\n    </DivContainer>\n  );\n};\n\nexport default Login;\n"],"names":["inputStyle","width","formStyle","display","flexDirection","notification","fontSize","color","position","padding","SwitchForm","styled","LoginForm","dispatch","useDispatch","isAuth","useSelector","state","auth","token","navigate","useNavigate","useEffect","routes","initialValues","email","password","validate","values","errors","test","style","onSubmit","obj","setSubmitting","loginUserThunk","isSubmitting","type","id","name","as","TextField","variant","label","required","component","marginTop","Button","disabled","to","LoginWrapper"],"sourceRoot":""}
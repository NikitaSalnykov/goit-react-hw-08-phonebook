{"version":3,"file":"static/js/875.264b1f39.chunk.js","mappings":"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","sources":["components/Filter/Filter.styled.js","store/filter/selectors.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx","store/contacts/selectors.js","../node_modules/@mui/icons-material/Delete.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  align-items: self-end;\n  margin-bottom: 20px;\n`;\n\nexport const SelectWrapper = styled.div`\n  & select {\n    padding: 5px 10px;\n\n  }\n`;","export const getFilter = state => state.filter.filter;\nexport const getFilterOptions = state => state.filter.filterOptions","import { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'store/contacts/selectors';\nimport { deleteContactsThunk } from 'store/contacts/thunk';\nimport { getFilter, getFilterOptions } from 'store/filter/selectors';\nimport * as React from 'react';\n\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport PersonIcon from '@mui/icons-material/Person';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  const filterOption = useSelector(getFilterOptions);\n  const contacts = useSelector(getContacts);\n\n  const getFilteredContacts = () => {\n    const normilizedFilterValue = filter.toLowerCase();\n    \n      const filterResult = contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normilizedFilterValue)\n    );\n\n    switch (filterOption) {\n      case \"new\":\n return filterResult.reverse()\n            case \"old\":\n         return filterResult\n              case \"z-a\":\n         return filterResult.slice().sort((a, b) => {\n          return b.name.localeCompare(a.name); \n        });\n              case \"a-z\":\n         return filterResult.slice().sort((a, b) => {\n          return a.name.localeCompare(b.name); \n        });\n    \n      default:\n         return filterResult\n    }\n    };\n\n    const filteredContacts = getFilteredContacts();\n\n    const onDeleteBtn = id => {\n      dispatch(deleteContactsThunk(id));\n    };\n\n    return (\n      <List>\n        {filteredContacts.map(contact => {\n          return (\n            <ListItem\n              key={contact.id}\n              secondaryAction={\n                <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => onDeleteBtn(contact.id)}>\n                  <DeleteIcon  />\n                </IconButton>\n              }\n            >\n              <ListItemAvatar>\n                <Avatar>\n                  <PersonIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <div>\n                <ListItemText\n                  style={{ marginRight: '20px' }}\n                  primary={`${contact.name}:`}\n                />\n                <ListItemText\n                  style={{ marginRight: '20px' }}\n                  secondary={`tel. ${contact.number}`}\n                />\n              </div>\n            </ListItem>\n          );\n        })}\n      </List>\n    );\n  }\n\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  width: 300px;\n  & div {\n    width: 300px;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  padding: 5px 10px;\n  border: 1px solid black;\n  border-radius: 5px;\n  transition: background-color 0.1s ease;\n  &:hover {\n    background-color: lightgrey;\n  }\n  &:active {\n    background-color: lightblue;\n  }\n`;\n","import { TextField } from '@mui/material';\nimport { Form } from './ContactForm.styled';\nimport { Button } from '@mui/material';\nimport Notiflix from 'notiflix';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'store/contacts/selectors';\nimport { createContactsThunk } from 'store/contacts/thunk';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleChange = ({ target }) => {\n    switch (target.name) {\n      case 'name':\n        setName(target.value);\n        break;\n      case 'number':\n        setNumber(target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleFormSubmit = ({ name, number }) => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      Notiflix.Notify.info(`${name} is already in contcts`);\n      return;\n    }\n\n    dispatch(createContactsThunk({ name, number }));\n    Notiflix.Notify.success('Contact added successfully');\n  };\n\n  const onSubmitClick = e => {\n    e.preventDefault();\n\n    if (!name.trim() && !number.trim()) {\n      Notiflix.Notify.failure('Empty input!');\n      return;\n    }\n\n    handleFormSubmit({ name, number });\n  };\n\n  return (\n    <Form onSubmit={onSubmitClick}>\n      <TextField\n        id=\"name\"\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={handleChange}\n        value={name}\n        variant=\"outlined\"\n        label=\"Name\"\n      />\n\n      <TextField\n        id=\"tel\"\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={handleChange}\n        value={number}\n        variant=\"outlined\"\n        label=\"Number\"\n      />\n      <Button style={{ marginTop: '10px' }} variant=\"contained\" type=\"submit\">\n        Add to contacts\n      </Button>\n    </Form>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { filterContacts, filterOptions } from 'store/filter/filterSlice';\nimport { FilterWrapper, SelectWrapper } from './Filter.styled';\nimport { IoIosSearch } from 'react-icons/io';\nimport { NativeSelect, TextField } from '@mui/material';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilter = ({ currentTarget }) => {\n    dispatch(filterContacts(currentTarget.value));\n  };\n\n  const handleSelect = ({ currentTarget }) => {\n    dispatch(filterOptions(currentTarget.value))\n  }\n\n  return (\n        <FilterWrapper>\n      <label style={{ marginRight: '14px' }} htmlFor=\"filter\">\n        <IoIosSearch size={20} />\n      </label>\n      <TextField\n        id=\"filter\"\n        type=\"text\"\n        name=\"input\"\n        required\n        onChange={handleFilter}\n        variant=\"standard\"\n      />\n      <SelectWrapper  style={{marginLeft: '20px'}}>\n        <NativeSelect  \n          defaultValue={'new contacts'}\n          onChange={handleSelect}\n          \n  >\n    <option value={'new'}>New</option>\n    <option value={'a-z'}>A-Z</option>\n        <option value={'z-a'}>Z-A</option>\n            <option value={'old'}>Old</option>\n  </NativeSelect>\n </SelectWrapper>\n    </FilterWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 20px;\n  @media screen and (min-width: 375px) {\n  }\n  @media screen and (min-width: 768px) {\n  }\n  @media screen and (min-width: 1200px) {\n    flex-direction: row;\n    justify-content: space-around;\n    gap: 0;\n  }\n`;\n\nexport const ListWrapper = styled.div`\n  padding: 0;\n\n  @media screen and (min-width: 375px) {\n  }\n  @media screen and (min-width: 768px) {\n    width: 460px;\n  }\n  @media screen and (min-width: 1200px) {\n    width: 560px;\n    flex-direction: row;\n    justify-content: space-around;\n    gap: 0;\n  }\n\n  & li {\n    border-radius: 10px;\n    background-color: #add8e678;\n    padding: 15px;\n    padding-right: 24px;\n    overflow: hidden;\n    &:nth-child(even) {\n      background-color: transparent;\n    }\n    & span {\n      overflow: hidden;\n    }\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getError, getIsLoading } from 'store/contacts/selectors';\nimport { getContactsThunk } from 'store/contacts/thunk';\nimport { Loader } from 'components/Loader/Loader';\n\nimport React from 'react';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { DivContainer, Section } from 'components/App/App.styled';\nimport { ContactsWrapper, ListWrapper } from './Contacts.styled';\nimport { routes } from 'routes';\nimport { useNavigate } from 'react-router-dom';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    !isLoggedIn && navigate(routes.HOME);\n  }, [isLoggedIn, navigate]);\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  return (\n    <Section>\n      <DivContainer>\n        <ContactsWrapper>\n          <div>\n            <h2>Phonebook</h2>\n            <ContactForm />\n          </div>\n          <ListWrapper>\n            <h2 style={{ marginBottom: '10px' }}>Contacts</h2>\n            <Filter />\n            {isLoading && !error ? <ContactList /> : <Loader />}\n          </ListWrapper>\n        </ContactsWrapper>\n      </DivContainer>\n    </Section>\n  );\n};\n\nexport default Contacts;\n","export const getContacts = state => state.contacts.contacts\nexport const getIsLoading = state => state.contacts.isLoading\nexport const getError = state => state.contacts.error","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;"],"names":["FilterWrapper","styled","SelectWrapper","getFilter","state","filter","getFilterOptions","filterOptions","ContactList","dispatch","useDispatch","useSelector","filterOption","contacts","getContacts","filteredContacts","normilizedFilterValue","toLowerCase","filterResult","contact","name","includes","reverse","slice","sort","a","b","localeCompare","getFilteredContacts","List","map","ListItem","secondaryAction","IconButton","edge","onClick","id","deleteContactsThunk","Delete","ListItemAvatar","Avatar","Person","ListItemText","style","marginRight","primary","secondary","number","Form","ContactForm","useState","setName","setNumber","handleChange","target","value","onSubmit","e","preventDefault","trim","find","Notiflix","createContactsThunk","handleFormSubmit","TextField","type","pattern","title","required","onChange","variant","label","marginTop","Filter","htmlFor","size","currentTarget","filterContacts","marginLeft","NativeSelect","defaultValue","ContactsWrapper","ListWrapper","isLoading","getIsLoading","error","getError","isLoggedIn","auth","navigate","useNavigate","useEffect","routes","getContactsThunk","marginBottom","Loader","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}
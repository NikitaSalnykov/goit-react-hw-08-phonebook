{"version":3,"file":"static/js/125.ec84ed8d.chunk.js","mappings":"yQAEaA,EAAa,CACxBC,MAAO,SAGIC,EAAY,CACvBC,QAAS,OACTC,cAAe,UAGJC,EAAe,CAC1BC,SAAU,QACVC,MAAO,MACPC,SAAU,WACVC,QAAS,OAGEC,EAAaC,EAAAA,GAAAA,IAAH,oK,6FChBVC,E,QAAkBD,GAAAA,IAAH,0I,6GCYfE,EAAa,WACxB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,KAAf,IAC1BC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRP,GAAUK,EAASG,EAAAA,EAAAA,KACpB,GAAE,CAACR,EAAQK,IAWZ,OACE,iCACE,SAAC,KAAD,CACEI,cAAe,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,IAChDC,SAAU,SAAAC,GACR,IAAMC,EAAS,CAAC,EAkBhB,OAjBKD,EAAOH,MAGT,2CAA2CK,KAAKF,EAAOH,QAE5CtB,EAAAA,GAJZ0B,EAAOJ,OAAQ,gBAAKM,MAAO5B,EAAAA,GAAZ,SAA0B,aAOtCyB,EAAOF,SAEDE,EAAOF,SAASM,OAAS,IAClCH,EAAOH,UACL,gBAAKK,MAAO5B,EAAAA,GAAZ,SAA0B,iDAH5B0B,EAAOH,UAAW,gBAAKK,MAAO5B,EAAAA,GAAZ,SAA0B,aAQvC0B,CACR,EACDI,SAAU,SAACL,EAAD,GAAgC,IAlCzBM,EAkCIC,EAAoB,EAApBA,cAlCJD,EAmCAN,EAlCrBhB,GACEwB,EAAAA,EAAAA,IAAgB,CACdZ,KAAMU,EAAIV,KACVC,MAAOS,EAAIT,MACXC,SAAUQ,EAAIR,YA+BZS,GAAc,EACf,EA1BH,SA4BG,gBAAGE,EAAH,EAAGA,aAAH,OACC,UAAC,KAAD,CAAMN,MAAO/B,EAAAA,GAAb,WACE,4BACE,SAAC,KAAD,CACE+B,MAAOjC,EAAAA,GACPwC,KAAK,OACLC,GAAG,OACHf,KAAK,OACLgB,GAAIC,EAAAA,EACJC,QAAQ,WACRC,MAAM,UAER,SAAC,KAAD,CAAcnB,KAAK,OAAOoB,UAAU,YAEtC,iBAAKb,MAAO,CAAEc,UAAW,QAAzB,WACE,SAAC,KAAD,CACEd,MAAOjC,EAAAA,GACPwC,KAAK,QACLC,GAAG,QACHf,KAAK,QACLgB,GAAIC,EAAAA,EACJC,QAAQ,WACRC,MAAM,QACNG,UAAQ,KAEV,SAAC,KAAD,CAActB,KAAK,QAAQoB,UAAU,YAEvC,iBAAKb,MAAO,CAAEc,UAAW,QAAzB,WACE,SAAC,KAAD,CACEd,MAAOjC,EAAAA,GACPwC,KAAK,WACLC,GAAG,WACHf,KAAK,WACLgB,GAAIC,EAAAA,EACJC,QAAQ,WACRC,MAAM,WACNG,UAAQ,KAEV,SAAC,KAAD,CAActB,KAAK,WAAWoB,UAAU,YAE1C,SAACG,EAAA,EAAD,CACEhB,MAAO,CAAEc,UAAW,QACpBH,QAAQ,YACRJ,KAAK,SACLU,SAAUX,EAJZ,SAKC,aA7CJ,KAmDH,SAAC,KAAD,WACE,SAAC,KAAD,CAAMY,GAAI3B,EAAAA,EAAAA,MAAV,SAAwB,kCAI/B,ECvGD,EAXiB,WACf,OACE,SAAC,IAAD,WACE,UAACZ,EAAD,YACE,wBAAI,aACJ,SAACC,EAAD,QAIP,C","sources":["components/LoginForm/LoginForm.styled.js","pages/Register/Register.styled.js","components/SignInForm/SignInForm.jsx","pages/Register/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const inputStyle = {\n  width: '250px',\n};\n\nexport const formStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n};\n\nexport const notification = {\n  fontSize: 'small',\n  color: 'red',\n  position: 'absolute',\n  padding: '2px',\n};\n\nexport const SwitchForm = styled.div`\n  margin-top: 10px;\n  color: #034c9c;\n  font-size: small;\n  transition: 0.3s ease;\n  opacity: 0.8;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const RegisterWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 30px;\n`;\n","import React, { useEffect } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { routes } from 'routes';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createUserThunk } from 'store/auth/thunk';\nimport { Button, TextField } from '@mui/material';\nimport {\n  SwitchForm,\n  formStyle,\n  inputStyle,\n  notification,\n} from 'components/LoginForm/LoginForm.styled';\n\nexport const SignInForm = () => {\n  const dispatch = useDispatch();\n  const isAuth = useSelector(state => state.auth.token);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    isAuth && navigate(routes.HOME);\n  }, [isAuth, navigate]);\n\n  const handleRegister = obj => {\n    dispatch(\n      createUserThunk({\n        name: obj.name,\n        email: obj.email,\n        password: obj.password,\n      })\n    );\n  };\n  return (\n    <>\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        validate={values => {\n          const errors = {};\n          if (!values.email) {\n            errors.email = <div style={notification}>Required</div>;\n          } else if (\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n          ) {\n            <div style={notification}>Invalid email address</div>;\n          }\n\n          if (!values.password) {\n            errors.password = <div style={notification}>Required</div>;\n          } else if (values.password.length < 7) {\n            errors.password = (\n              <div style={notification}>\n                Password must be at least 7 characters long\n              </div>\n            );\n          }\n          return errors;\n        }}\n        onSubmit={(values, { setSubmitting }) => {\n          handleRegister(values);\n          setSubmitting(false);\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form style={formStyle}>\n            <div>\n              <Field\n                style={inputStyle}\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                as={TextField}\n                variant=\"outlined\"\n                label=\"Name\"\n              />\n              <ErrorMessage name=\"name\" component=\"div\" />\n            </div>\n            <div style={{ marginTop: '20px' }}>\n              <Field\n                style={inputStyle}\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                as={TextField}\n                variant=\"outlined\"\n                label=\"Email\"\n                required\n              />\n              <ErrorMessage name=\"email\" component=\"div\" />\n            </div>\n            <div style={{ marginTop: '20px' }}>\n              <Field\n                style={inputStyle}\n                type=\"password\"\n                id=\"password\"\n                name=\"password\"\n                as={TextField}\n                variant=\"outlined\"\n                label=\"Password\"\n                required\n              />\n              <ErrorMessage name=\"password\" component=\"div\" />\n            </div>\n            <Button\n              style={{ marginTop: '30px' }}\n              variant=\"contained\"\n              type=\"submit\"\n              disabled={isSubmitting}\n            >\n              Submit\n            </Button>\n          </Form>\n        )}\n      </Formik>\n      <SwitchForm>\n        <Link to={routes.LOGIN}>Already registered? Login</Link>\n      </SwitchForm>\n    </>\n  );\n};\n","import { DivContainer } from 'components/App/App.styled';\nimport { RegisterWrapper } from './Register.styled';\nimport { SignInForm } from 'components/SignInForm/SignInForm';\n\nconst Register = () => {\n  return (\n    <DivContainer>\n      <RegisterWrapper>\n        <h1>Sign Up</h1>\n        <SignInForm />\n      </RegisterWrapper>\n    </DivContainer>\n  );\n};\n\nexport default Register;\n"],"names":["inputStyle","width","formStyle","display","flexDirection","notification","fontSize","color","position","padding","SwitchForm","styled","RegisterWrapper","SignInForm","dispatch","useDispatch","isAuth","useSelector","state","auth","token","navigate","useNavigate","useEffect","routes","initialValues","name","email","password","validate","values","errors","test","style","length","onSubmit","obj","setSubmitting","createUserThunk","isSubmitting","type","id","as","TextField","variant","label","component","marginTop","required","Button","disabled","to"],"sourceRoot":""}
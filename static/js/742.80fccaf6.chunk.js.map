{"version":3,"file":"static/js/742.80fccaf6.chunk.js","mappings":"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","sources":["components/App/App.styled.js","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","store/contacts/selectors.js","store/filter/selectors.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const DivContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 20px;\n  padding-right: 20px;\n  @media screen and (min-width: 375px) {\n    width: 375px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n    @media screen and (min-width: 1200px) {\n    width: 1200px;\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n`;\n\nexport const Section = styled.section`\n  padding-top: 20px;\n  padding-bottom: 20px;\n\n  @media screen and (min-width: 768px) {\n    padding-bottom: 32px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    padding-top: 16px;\n    padding-bottom: 32px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n`;\n","import { Oval } from 'react-loader-spinner';\nimport { LoaderContainer } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderContainer>\n      <Oval\n        height={30}\n        width={30}\n        color=\"#777777\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"oval-loading\"\n        secondaryColor=\"#141416\"\n        strokeWidth={4}\n        strokeWidthSecondary={3}\n      />\n    </LoaderContainer>\n  );\n};\n","export const getContacts = state => state.contacts.contacts\nexport const getIsLoading = state => state.contacts.isLoading\nexport const getError = state => state.contacts.error","export const getFilter = state => state.filter.filter","import styled from 'styled-components';\n\nexport const List = styled.ul`\nmax-width: 500px;\npadding: 0;\n\n& li {\n  position: relative;\n  display:flex;\n  flex-wrap: wrap;\n  align-items: baseline;\n  justify-content: space-between;\n  background-color: #dadbe3;\n  padding: 15px;\n  padding-right: 24px;\n      overflow: hidden;\n  &:nth-child(even) {\n  background-color: transparent;\n}\n  & div {\n  display:flex;\n  flex-wrap: wrap;\n  & p {\n    margin-left: 10px;\n  }\n  & p+p {\n  margin-left: 5px;\n  }\n}\n  & button {\n    top: 0;\n    right: 0;\n    position: absolute;\n    border: none;\n    background: transparent;\n    padding: 3px;\n    cursor: pointer;\n  }\n}\n`","import { useDispatch, useSelector } from 'react-redux'\nimport { getContacts } from 'store/contacts/selectors'\nimport { deleteContactsThunk } from 'store/contacts/thunk'\nimport { getFilter } from 'store/filter/selectors'\nimport { List } from './ContactList.styled'\nimport { TiDelete } from 'react-icons/ti';\nimport { FaPhoneAlt } from 'react-icons/fa';\n\nexport const ContactList = () => {\n  \n  const dispatch = useDispatch()\n  const filter = useSelector(getFilter)\n\n  const contacts = useSelector(getContacts)\n  \n    const getFilteredContacts = () => {\n    const normilizedFilterValue = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normilizedFilterValue)\n    );\n  };\n\n  const filteredContacts = getFilteredContacts()\n  \n  const onDeleteBtn = id => {\n    dispatch(deleteContactsThunk(id))\n  };\n  \n  return (\n    <List>\n      {filteredContacts.map((contact) => {\n        return (\n          <li key={contact.id}>\n            <div>\n              <FaPhoneAlt size='18'/>\n            <p> {contact.name}:</p>\n            <p>{contact.phone}</p>\n            </div>\n            <button onClick={() => onDeleteBtn(contact.id)}><TiDelete size='24'/></button>\n          </li>\n        )\n\n      })}\n    </List>\n  )\n}\n","\nimport styled from 'styled-components';\n\nexport const Form = styled.form`\n  & div {\n  display: flex;\n  flex-direction: column;\n\n  padding: 10px 20px;\n  border: solid 1px black;\n  max-width: 400px;\n  }\n`\n\nexport const Button = styled.button`\n    width: 100px;\n    padding: 5px 10px;\n    border: 1px solid black;\n    border-radius: 5px;\n    transition:  background-color 0.1s ease;\n  &:hover {\n    background-color: lightgrey;\n    \n  } &:active {\n    background-color: lightblue;\n    }\n`\n\n\nexport const Input = styled.input`\n    max-width: 300px;\n    margin-bottom: 22px;\n    margin-top: 5px;\n    padding: 7px 10px;\n    border: 1px solid black;\n    background-color: transparent;\n`","import { Button, Form, Input } from './ContactForm.styled';\nimport Notiflix from 'notiflix';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'store/contacts/selectors';\nimport { createContactsThunk } from 'store/contacts/thunk';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch()\n  const contacts = useSelector(getContacts)\n\n  const handleChange = ({ target }) => {\n    switch (target.name) {\n      case 'name':\n        setName(target.value);\n        break;\n      case 'number':\n        setNumber(target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleFormSubmit = ({ name, number }) => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      Notiflix.Notify.info(`${name} is already in contcts`);\n      return;\n    }\n    \n    dispatch(createContactsThunk({name, phone: number}))\n    Notiflix.Notify.success('Contact added successfully');\n  };\n\n  const onSubmitClick = e => {\n    e.preventDefault();\n\n    if (!name.trim() && !number.trim()) {\n      Notiflix.Notify.failure('Empty input!');\n      return;\n    }\n\n    handleFormSubmit({ name, number });\n  };\n\n  \n\n  return (\n    <Form onSubmit={onSubmitClick}>\n      <div>\n        <label htmlFor=\"name\">Name</label>\n        <Input\n          id=\"name\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n          value={name}\n        />\n        <label htmlFor=\"tel\">Number</label>\n        <Input\n          id=\"tel\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n          value={number}\n        />\n        <Button type=\"submit\">Add contact</Button>\n      </div>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\nfont-style: italic;\n`","import { Input } from 'components/ContactForm/ContactForm.styled'\nimport React from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { filterContacts } from 'store/filter/filterSlice';\nimport { Label } from './Filter.styled';\n\n\n\nexport const Filter = () => {\n  const dispatch = useDispatch()\n\n  const handleFilter = ({ currentTarget }) => {\n    dispatch(filterContacts(currentTarget.value));\n  };\n\n    return (\n      <div>\n        <Label style={{ marginRight: '14px' }} htmlFor=\"filter\">Find contacts by name</Label>\n        <Input type=\"text\" name=\"input\" id=\"filter\" onChange={handleFilter} />\n      </div>\n    )\n}\n ","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getError, getIsLoading } from 'store/contacts/selectors';\nimport { getContactsThunk } from 'store/contacts/thunk';\nimport { Loader } from 'components/Loader/Loader';\n\nimport React from 'react'\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { DivContainer, Section } from 'components/App/App.styled';\n\n\n const Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  return (\n         <Section>\n      <DivContainer>\n        <h2>Phonebook</h2>\n        <ContactForm/>\n        <h2>Contacts</h2>\n        <Filter/>\n        {isLoading && !error ? <ContactList/> : <Loader/>}\n         </DivContainer>\n    </Section>\n\n  );\n};\n\nexport default Contacts;"],"names":["DivContainer","styled","Section","LoaderContainer","Loader","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","getContacts","state","contacts","getIsLoading","isLoading","getError","error","getFilter","filter","List","ContactList","dispatch","useDispatch","useSelector","filteredContacts","normilizedFilterValue","toLowerCase","contact","name","includes","getFilteredContacts","map","size","phone","onClick","id","deleteContactsThunk","Form","Button","Input","ContactForm","useState","setName","number","setNumber","handleChange","target","value","onSubmit","e","preventDefault","trim","find","Notiflix","createContactsThunk","handleFormSubmit","htmlFor","type","pattern","title","required","onChange","Label","Filter","style","marginRight","currentTarget","filterContacts","useEffect","getContactsThunk"],"sourceRoot":""}
{"version":3,"file":"static/js/166.f11e66ed.chunk.js","mappings":"sNAAaA,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASA,QAAnB,EACnBC,EAAe,SAAAF,GAAK,OAAIA,EAAMC,SAASE,SAAnB,EACpBC,EAAW,SAAAJ,GAAK,OAAIA,EAAMC,SAASI,KAAnB,E,oBCFhBC,EAAY,SAAAN,GAAK,OAAIA,EAAMO,OAAOA,MAAjB,E,sFCejBC,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MACXH,GAASI,EAAAA,EAAAA,IAAYL,GAErBL,GAAWU,EAAAA,EAAAA,IAAYZ,GASvBa,EAPsB,WAC1B,IAAMC,EAAwBN,EAAOO,cACrC,OAAOb,EAASM,QAAO,SAAAQ,GAAO,OAC5BA,EAAQC,KAAKF,cAAcG,SAASJ,EADR,GAG/B,CAEwBK,GAMzB,OACE,SAACC,EAAA,EAAD,UACGP,EAAiBQ,KAAI,SAAAL,GACpB,OACE,UAACM,EAAA,GAAD,CAEEC,iBACE,SAACC,EAAA,EAAD,CAAYC,KAAK,MAAM,aAAW,SAAlC,UACE,SAACC,EAAA,EAAD,CAAYC,QAAS,kBAZfC,EAYiCZ,EAAQY,QAX3DlB,GAASmB,EAAAA,EAAAA,IAAoBD,IADX,IAAAA,CAYe,MAJ3B,WAQE,SAACE,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,SAGJ,4BACE,SAACC,EAAA,EAAD,CACEC,MAAO,CAAEC,YAAa,QACtBC,QAAO,UAAKpB,EAAQC,KAAb,QAET,SAACgB,EAAA,EAAD,CACEC,MAAO,CAAEC,YAAa,QACtBE,UAAWrB,EAAQsB,cAnBlBtB,EAAQY,GAwBlB,KAGN,E,uCChEYW,EAAOC,EAAAA,GAAAA,KAAH,uI,GAUKA,EAAAA,GAAAA,OAAH,sQ,4BCHNC,EAAc,WACzB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOzB,EAAP,KAAa0B,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOJ,EAAP,KAAeM,EAAf,KAEMlC,GAAWC,EAAAA,EAAAA,MACXT,GAAWU,EAAAA,EAAAA,IAAYZ,GAEvB6C,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtB,OAAQA,EAAO7B,MACb,IAAK,OACH0B,EAAQG,EAAOC,OACf,MACF,IAAK,SACHH,EAAUE,EAAOC,OAMtB,EA2BD,OACE,UAACR,EAAD,CAAMS,SAZc,SAAAC,GACpBA,EAAEC,iBAEGjC,EAAKkC,QAAWb,EAAOa,OAjBL,SAAC,GAAsB,IAApBlC,EAAmB,EAAnBA,KAAMqB,EAAa,EAAbA,OAE9BpC,EAASkD,MACP,SAAApC,GAAO,OAAIA,EAAQC,KAAKF,gBAAkBE,EAAKF,aAAxC,IAGTsC,IAAAA,OAAAA,KAAA,UAAwBpC,EAAxB,4BAIFP,GAAS4C,EAAAA,EAAAA,IAAoB,CAAErC,KAAAA,EAAMqB,OAAAA,KACrCe,IAAAA,OAAAA,QAAwB,8BACzB,CAUCE,CAAiB,CAAEtC,KAAAA,EAAMqB,OAAAA,IAJvBe,IAAAA,OAAAA,QAAwB,eAK3B,EAGC,WACE,SAACG,EAAA,EAAD,CACE5B,GAAG,OACH6B,KAAK,OACLxC,KAAK,OACLyC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,SAAUhB,EACVE,MAAO9B,EACP6C,QAAQ,WACRC,MAAM,UAGR,SAACP,EAAA,EAAD,CACE5B,GAAG,MACH6B,KAAK,MACLxC,KAAK,SACLyC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,SAAUhB,EACVE,MAAOT,EACPwB,QAAQ,WACRC,MAAM,YAER,SAAC,IAAD,CAAQ7B,MAAO,CAAE8B,UAAW,QAAUF,QAAQ,YAAYL,KAAK,SAA/D,SAAwE,sBAK7E,E,UCrFYQ,EAAgBzB,EAAAA,GAAAA,IAAH,4F,UCKb0B,EAAS,WACpB,IAAMxD,GAAWC,EAAAA,EAAAA,MAMjB,OACE,UAACsD,EAAD,YACE,kBAAO/B,MAAO,CAAEC,YAAa,QAAUgC,QAAQ,SAA/C,UACE,SAAC,MAAD,CAAaC,KAAM,QAErB,SAACZ,EAAA,EAAD,CACE5B,GAAG,SACH6B,KAAK,OACLxC,KAAK,QACL2C,UAAQ,EACRC,SAde,SAAC,GAAuB,IAArBQ,EAAoB,EAApBA,cACtB3D,GAAS4D,EAAAA,EAAAA,IAAeD,EAActB,OACvC,EAaKe,QAAQ,eAIf,E,UC3BYS,EAAkB/B,EAAAA,GAAAA,IAAH,wUAgBfgC,EAAchC,EAAAA,GAAAA,IAAH,8iBCuBxB,EA5BiB,WACf,IAAM9B,GAAWC,EAAAA,EAAAA,MACXP,GAAYQ,EAAAA,EAAAA,IAAYT,GACxBG,GAAQM,EAAAA,EAAAA,IAAYP,GAM1B,OAJAoE,EAAAA,EAAAA,YAAU,WACR/D,GAASgE,EAAAA,EAAAA,MACV,GAAE,CAAChE,KAGF,SAAC,IAAD,WACE,SAAC,IAAD,WACE,UAAC6D,EAAD,YACE,4BACE,wBAAI,eACJ,SAAC9B,EAAD,QAEF,UAAC+B,EAAD,YACE,eAAItC,MAAO,CAAEyC,aAAc,QAA3B,SAAqC,cACrC,SAACT,EAAD,IACC9D,IAAcE,GAAQ,SAACG,EAAD,KAAkB,SAACmE,EAAA,EAAD,aAMpD,C","sources":["store/contacts/selectors.js","store/filter/selectors.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.contacts\nexport const getIsLoading = state => state.contacts.isLoading\nexport const getError = state => state.contacts.error","export const getFilter = state => state.filter.filter","import { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'store/contacts/selectors';\nimport { deleteContactsThunk } from 'store/contacts/thunk';\nimport { getFilter } from 'store/filter/selectors';\nimport * as React from 'react';\n\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport PersonIcon from '@mui/icons-material/Person';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const contacts = useSelector(getContacts);\n\n  const getFilteredContacts = () => {\n    const normilizedFilterValue = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normilizedFilterValue)\n    );\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  const onDeleteBtn = id => {\n    dispatch(deleteContactsThunk(id));\n  };\n\n  return (\n    <List>\n      {filteredContacts.map(contact => {\n        return (\n          <ListItem\n            key={contact.id}\n            secondaryAction={\n              <IconButton edge=\"end\" aria-label=\"delete\">\n                <DeleteIcon onClick={() => onDeleteBtn(contact.id)} />\n              </IconButton>\n            }\n          >\n            <ListItemAvatar>\n              <Avatar>\n                <PersonIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <div>\n              <ListItemText\n                style={{ marginRight: '20px' }}\n                primary={`${contact.name}:`}\n              />\n              <ListItemText\n                style={{ marginRight: '20px' }}\n                secondary={contact.number}\n              />\n            </div>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  width: 300px;\n  & div {\n    width: 300px;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  padding: 5px 10px;\n  border: 1px solid black;\n  border-radius: 5px;\n  transition: background-color 0.1s ease;\n  &:hover {\n    background-color: lightgrey;\n  }\n  &:active {\n    background-color: lightblue;\n  }\n`;\n","import { TextField } from '@mui/material';\nimport { Form } from './ContactForm.styled';\nimport { Button } from '@mui/material';\nimport Notiflix from 'notiflix';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'store/contacts/selectors';\nimport { createContactsThunk } from 'store/contacts/thunk';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleChange = ({ target }) => {\n    switch (target.name) {\n      case 'name':\n        setName(target.value);\n        break;\n      case 'number':\n        setNumber(target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleFormSubmit = ({ name, number }) => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      Notiflix.Notify.info(`${name} is already in contcts`);\n      return;\n    }\n\n    dispatch(createContactsThunk({ name, number }));\n    Notiflix.Notify.success('Contact added successfully');\n  };\n\n  const onSubmitClick = e => {\n    e.preventDefault();\n\n    if (!name.trim() && !number.trim()) {\n      Notiflix.Notify.failure('Empty input!');\n      return;\n    }\n\n    handleFormSubmit({ name, number });\n  };\n\n  return (\n    <Form onSubmit={onSubmitClick}>\n      <TextField\n        id=\"name\"\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={handleChange}\n        value={name}\n        variant=\"outlined\"\n        label=\"Name\"\n      />\n\n      <TextField\n        id=\"tel\"\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={handleChange}\n        value={number}\n        variant=\"outlined\"\n        label=\"Number\"\n      />\n      <Button style={{ marginTop: '10px' }} variant=\"contained\" type=\"submit\">\n        Add to contacts\n      </Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  align-items: self-end;\n  margin-bottom: 20px;\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { filterContacts } from 'store/filter/filterSlice';\nimport { FilterWrapper } from './Filter.styled';\nimport { IoIosSearch } from 'react-icons/io';\nimport { TextField } from '@mui/material';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilter = ({ currentTarget }) => {\n    dispatch(filterContacts(currentTarget.value));\n  };\n\n  return (\n    <FilterWrapper>\n      <label style={{ marginRight: '14px' }} htmlFor=\"filter\">\n        <IoIosSearch size={20} />\n      </label>\n      <TextField\n        id=\"filter\"\n        type=\"text\"\n        name=\"input\"\n        required\n        onChange={handleFilter}\n        variant=\"standard\"\n      />\n    </FilterWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 20px;\n  @media screen and (min-width: 375px) {\n  }\n  @media screen and (min-width: 768px) {\n  }\n  @media screen and (min-width: 1200px) {\n    flex-direction: row;\n    justify-content: space-around;\n    gap: 0;\n  }\n`;\n\nexport const ListWrapper = styled.div`\n  padding: 0;\n\n  @media screen and (min-width: 375px) {\n  }\n  @media screen and (min-width: 768px) {\n    width: 460px;\n  }\n  @media screen and (min-width: 1200px) {\n    width: 560px;\n    flex-direction: row;\n    justify-content: space-around;\n    gap: 0;\n  }\n\n  & li {\n    border-radius: 10px;\n    background-color: #add8e678;\n    padding: 15px;\n    padding-right: 24px;\n    overflow: hidden;\n    &:nth-child(even) {\n      background-color: transparent;\n    }\n    & span {\n      overflow: hidden;\n    }\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getError, getIsLoading } from 'store/contacts/selectors';\nimport { getContactsThunk } from 'store/contacts/thunk';\nimport { Loader } from 'components/Loader/Loader';\n\nimport React from 'react';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { DivContainer, Section } from 'components/App/App.styled';\nimport { ContactsWrapper, ListWrapper } from './Contacts.styled';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  return (\n    <Section>\n      <DivContainer>\n        <ContactsWrapper>\n          <div>\n            <h2>Phonebook</h2>\n            <ContactForm />\n          </div>\n          <ListWrapper>\n            <h2 style={{ marginBottom: '10px' }}>Contacts</h2>\n            <Filter />\n            {isLoading && !error ? <ContactList /> : <Loader />}\n          </ListWrapper>\n        </ContactsWrapper>\n      </DivContainer>\n    </Section>\n  );\n};\n\nexport default Contacts;\n"],"names":["getContacts","state","contacts","getIsLoading","isLoading","getError","error","getFilter","filter","ContactList","dispatch","useDispatch","useSelector","filteredContacts","normilizedFilterValue","toLowerCase","contact","name","includes","getFilteredContacts","List","map","ListItem","secondaryAction","IconButton","edge","Delete","onClick","id","deleteContactsThunk","ListItemAvatar","Avatar","Person","ListItemText","style","marginRight","primary","secondary","number","Form","styled","ContactForm","useState","setName","setNumber","handleChange","target","value","onSubmit","e","preventDefault","trim","find","Notiflix","createContactsThunk","handleFormSubmit","TextField","type","pattern","title","required","onChange","variant","label","marginTop","FilterWrapper","Filter","htmlFor","size","currentTarget","filterContacts","ContactsWrapper","ListWrapper","useEffect","getContactsThunk","marginBottom","Loader"],"sourceRoot":""}
{"version":3,"file":"static/js/285.458bb27b.chunk.js","mappings":"0OA4EC,UApEgB,WAEf,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,KAAf,IAC1BC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACVP,GAAUK,EAASG,EAAAA,EAAAA,KAClB,GAAE,CAACR,EAAQK,IAWZ,OACC,UAAC,IAAD,YACE,wBAAI,aACJ,SAAC,KAAD,CACEI,cAAe,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,IAChDC,SAAU,SAAAC,GACR,IAAMC,EAAS,CAAC,EAQhB,OAPKD,EAAOH,MAGT,2CAA2CK,KAAKF,EAAOH,SAExDI,EAAOJ,MAAQ,yBAJfI,EAAOJ,MAAQ,WAMVI,CACR,EACAE,SAAU,SAACH,EAAD,GAAgC,IAxBxBI,EAwBGC,EAAoB,EAApBA,cAxBHD,EAyBDJ,EAxBrBhB,GAASsB,EAAAA,EAAAA,IAAgB,CACvB,KAAQF,EAAIR,KACZ,MAASQ,EAAIP,MACb,SAAYO,EAAIN,YAsBZO,GAAc,EAChB,EAhBH,SAkBG,gBAAGE,EAAH,EAAGA,aAAH,OACA,UAAC,KAAD,YACN,4BACE,kBAAOC,QAAQ,OAAf,SAAsB,WACtB,SAAC,KAAD,CAAOC,KAAK,OAAOC,GAAG,OAAOd,KAAK,aAEpC,4BACE,kBAAOY,QAAQ,QAAf,SAAuB,YACvB,SAAC,KAAD,CAAOC,KAAK,QAAQC,GAAG,QAAQd,KAAK,WACpC,SAAC,KAAD,CAAcA,KAAK,QAAQe,UAAU,YAEvC,4BACE,kBAAOH,QAAQ,WAAf,SAA0B,eAC1B,SAAC,KAAD,CAAOC,KAAK,WAAWC,GAAG,WAAWd,KAAK,cAC1C,SAAC,KAAD,CAAcA,KAAK,WAAWe,UAAU,YAE1C,mBAAQF,KAAK,SAASG,SAAUL,EAAhC,SAA8C,aAhBxC,KAsBG,0BACJ,SAAC,KAAD,CAAMM,GAAInB,EAAAA,EAAAA,MAAV,SAAwB,cAG3B,C","sources":["pages/Register.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\n import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { DivContainer } from 'components/App/App.styled';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { routes } from 'routes';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createUserThunk } from 'store/auth/thunk' \n \nconst Register = () => {\n    \n  const dispatch = useDispatch()\n  const isAuth = useSelector(state => state.auth.token)\n  const navigate = useNavigate()\n  \n  useEffect(() => {\n  isAuth && navigate(routes.HOME)\n  }, [isAuth, navigate])\n  \n\n  const handleRegister = (obj) => {\n    dispatch(createUserThunk({\n      \"name\": obj.name,\n      \"email\": obj.email,\n      \"password\": obj.password\n    }))\n  }\n  \n  return (\n   <DivContainer>\n     <h1>Sign Up</h1>\n     <Formik\n       initialValues={{ name: '', email: '', password: '' }}\n       validate={values => {\n         const errors = {};\n         if (!values.email) {\n           errors.email = 'Required';\n         } else if (\n           !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n         ) {\n           errors.email = 'Invalid email address';\n         }\n         return errors;\n       }}\n        onSubmit={(values, { setSubmitting }) => {\n          handleRegister(values);\n          setSubmitting(false);\n       }}\n     >\n       {({ isSubmitting }) => (\n        <Form>\n  <div>\n    <label htmlFor=\"name\">Name:</label>\n    <Field type=\"text\" id=\"name\" name=\"name\" />\n  </div>\n  <div>\n    <label htmlFor=\"email\">Email:</label>\n    <Field type=\"email\" id=\"email\" name=\"email\" />\n    <ErrorMessage name=\"email\" component=\"div\" />\n  </div>\n  <div>\n    <label htmlFor=\"password\">Password:</label>\n    <Field type=\"password\" id=\"password\" name=\"password\" />\n    <ErrorMessage name=\"password\" component=\"div\" />\n  </div>\n  <button type=\"submit\" disabled={isSubmitting}>\n    Submit\n  </button>\n</Form>\n       )}\n      </Formik>\n           <div>\n       <Link to={routes.LOGIN}>Login</Link>\n     </div>\n   </DivContainer>\n );}\n \n export default Register;"],"names":["dispatch","useDispatch","isAuth","useSelector","state","auth","token","navigate","useNavigate","useEffect","routes","initialValues","name","email","password","validate","values","errors","test","onSubmit","obj","setSubmitting","createUserThunk","isSubmitting","htmlFor","type","id","component","disabled","to"],"sourceRoot":""}